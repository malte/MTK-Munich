---
import { getLangFromUrl, useTranslations } from "../i18n/utils";
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const { title, meta, color, class: className, ...props } = Astro.props;
---

<div
  id="contact"
  class:list={[
    className,
    "p-4 lg:p-12 bg-stone-50 flex flex-col mb-24 rounded-lg",
  ]}
>
  <div class="flex flex-col sm:flex-row mb-8 gap-4">
    <img
      class="sm:w-1/2 h-auto object-contain"
      src="https://media0.giphy.com/media/v1.Y2lkPTc5MGI3NjExczE4MjU0NHJnMmp3NWQ3aTU0MmZjb3R3ZWNqYTFmNjJ2bHZweXQ1ayZlcD12MV9naWZzX3NlYXJjaCZjdD1n/jXtdnZlhK7Fbfo4Ioc/200.webp"
      alt="Kung Fu Panda finds inner peace"
    />
    <h2>{t("contact.greeting")}</h2>
  </div>
  <form class="" x-data="contactForm()" @submit.prevent="submit">
    <label>
      <span>{t("contact.name")}</span>
      <input name="name" x-model="formData.name" required="true" />
    </label>
    <label>
      <span>{t("contact.email")}</span>
      <input name="email" x-model="formData.email" required="true" />
    </label>
    <label>
      <span>{t("contact.question")}</span>
      <textarea name="message" x-model="formData.message" required="true"
      ></textarea>
    </label>
    <label>
      <input
        type="checkbox"
        name="privacycheck"
        x-model="formData.privacy"
        required="true"
      />
      {t("contact.privacy")}
    </label>
    <span>{t("contact.necessary")}</span>

    <button class="" type="submit" x-text="buttonText" :disabled="loading">
      {t("contact.send")}
    </button>
  </form>

  <script is:inline>
    const FORMSPARK_ACTION_URL = "https://submit-form.com/MZNuUd1jS";
    function contactForm() {
      return {
        formData: {
          name: "",
          email: "",
          message: "",
          privacy: false,
        },
        buttonText: "Send",
        loading: false,
        submit() {
          const botpoison = new Botpoison({
            publicKey: "pk_ed2df257-1669-441a-a64e-df1438b79b26",
          });
          botpoison.challenge().then((result) => {
            this.buttonText = "Sending...";
            this.loading = true;

            fetch(FORMSPARK_ACTION_URL, {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
                Accept: "application/json",
              },
              body: JSON.stringify({
                ...this.formData,
                _botpoison: result.solution,
              }),
            })
              .then(() => {
                alert("Form sent");
              })
              .catch(() => {
                alert("Something went wrong");
              })
              .finally(() => {
                this.formData.message = "";
                this.formData.email = "";
                this.formData.name = "";
                this.formData.privacy = false;
                this.buttonText = "Send";
                this.loading = false;
              });
          });
        },
      };
    }
  </script>
  <style>
    form {
      @apply flex flex-col gap-4;
    }
    label {
      @apply flex flex-col;
      input,
      textarea {
        @apply p-2 border border-stone-300 rounded-sm;
      }
    }
    label:has(input[type="checkbox"]) {
      @apply flex flex-row gap-2 items-baseline;
    }
    button {
      @apply bg-lazuli text-white hover:bg-terracotta py-4 uppercase tracking-wider px-8 inline-block w-auto rounded-full;
    }
  </style>
</div>
