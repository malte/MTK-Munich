---
import { generateUniqueId } from "../utils.js";

const uniqueId = generateUniqueId();
const curveId = generateUniqueId();

const {
  tag = "h2",
  direction = "R2L",
  offset = 0,
  type = "smile",
  class: className,
  ...props
} = Astro.props;
const allowedTags = ["h1", "h2", "h3", "h4", "h5", "h6"];
const headlineTag = allowedTags.includes(tag) ? tag : "h2";
const curves = {
  slope: "M 50,50 a 1200,1200 0 0,1 900,350",
  frown: "M 50,300 a 700,700 0 0,1 950,0",
  slide: "M 100,500 a 150,150 0 0,0 300,0",
  smile: "M 50,50 a 700,700 0 0,0 950,0",
  hill: "M 50,500 a 1200,1200 0 0,1 950,-400",
  kicker: "M 50,450 a 1200,1200 0 0,0 950,-400",
  quarter: "M 100,500 a 150,150 0 1,1 250,-350",
};
const curve = curves[type];
const spacing = tag == "h2" ? "h-[80px] md:h-[300px]" : "h-[100px]";
---

<div class:list={["relative", spacing]}>
  <div
    direction={direction}
    offset={offset}
    {...props}
    id={uniqueId}
    class:list={[
      "curved-headline z-10 font-extrabold pointer-events-none",
      className,
    ]}
  >
    <Fragment set:html={`<${headlineTag}>`} />
    <svg viewBox="0 0 1000 500">
      <rect
        width="1000"
        height="500"
        x="0"
        y="0"
        style="fill:transparent;stroke:black;stroke-width:0;"></rect>
      <path
        id={curveId}
        fill="transparent"
        stroke="#0000c8"
        stroke-width="0"
        d={curve}></path>
      <text class="">
        <textPath
          lengthAdjust="spacing"
          href=`#${curveId}`
          class="animated-text"
          startOffset="0"
        >
          <slot />
        </textPath>
      </text>
    </svg>
    <Fragment set:html={`</${headlineTag}>`} />
  </div>
</div>
